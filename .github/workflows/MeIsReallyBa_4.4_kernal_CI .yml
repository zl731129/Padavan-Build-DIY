# Build from MeIsReallyBa's kernal4.4 repo
# BY: TurBoTse

name: Build from MeIsReallyBa's kernal4.4 repo

on: 
  workflow_dispatch:
    inputs:
#  schedule:                                                    # 自动编译
#    - cron: 0 19 * * *                                         # 每天国际时间19点，北京时间凌晨3点执行
  watch:                                                        # 监视操作
    types: [started]                                            # 点击 Star 之后
env:
  build_dir: /opt/padavan                                       # 源码目录
  images_dir: /opt/images                                       # 固件目录
  work_dir: /opt/padavan/trunk                                  # 工作目录
  config_dir: /opt/padavan/trunk/configs/templates              # 设备模板目录
  src_git: https://github.com/MeIsReallyBa/padavan-4.4.git      # 源码地址

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id  # 自己点的 Star
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7621"
            targets: "K2P"
          - build_variant: "mt7621"
            targets: "R2100"
    steps:
      - name: Checkout main            # 导入主分支
        uses: actions/checkout@v2
      - name: Prepare environment      # 准备编译环境
        run: |                         # 安装依赖包
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext
          sudo timedatectl set-timezone 'Asia/Shanghai'  # 设置时区
      - name: Clone source code
        run: |                         # 克隆源码
          git clone --depth=1 $src_git $build_dir
      - name: Run shellcheck
        run: |
          cd $work_dir
          if [ -f ./tools/shellcheck.sh ]; then sh ./tools/shellcheck.sh; fi
      - name: Prepare toolchain
        run: |                         # 下载预编译的构建工具链
          mkdir -p $images_dir
          cd $build_dir/toolchain-mipsel
          sh dl_toolchain.sh
      - name: Modify custom configs
        run: |                         # 拷贝文件并修改
          if [ -d meIsreallyba/config ]; then cp -f meIsreallyba/config/* $work_dir; fi
          if [ -d meIsreallyba/modify ]; then cp -rf meIsreallyba/modify/* $work_dir; fi
          if [ -d meIsreallyba/scripts ]; then cp -f meIsreallyba/scripts/* $work_dir; fi
          cd $config_dir
          for m in $targets; do if [ -f $m.config ]; then \
          ##科学上网##
          echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> $m.config #科学上网插件，选择n后全部有关插件都不集成
          echo "CONFIG_FIRMWARE_INCLUDE_XRAY=y" >> $m.config #集成xray执行文件  ~4.5M
          echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> $m.config #集成v2ray执行文件
          echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=y" >> $m.config #集成trojan执行文件  ~1.2M
          echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=y" >> $m.config #simple-obfs混淆插件
          ##广告管理##
          echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> $m.config #adbyby plus+
          ##DNS服务##
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=y" >> $m.config #smartdns
          echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=y" >> $m.config #adg DNS去AD
          ##内网穿透服务##
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> $m.config #zerotier ~1.3M
          echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> $m.config #aliddns
          echo "CONFIG_FIRMWARE_INCLUDE_DDNSTO=n" >> $m.config #ddnsto  ~0.5M
          echo "CONFIG_FIRMWARE_INCLUDE_ALDRIVER=n" >> $m.config  #ALDRIVER  ~3m
          echo "CONFIG_FIRMWARE_INCLUDE_SQM=n" >> $m.config #SQM
          ##CPU超频##
          echo "CONFIG_FIRMWARE_INCLUDE_OC=n" >> $m.config #CPU超频开关
          echo 'CONFIG_FIRMWARE_MT7621_OC="0x312"' >> $m.config #此处填写对应频率的十六进制：1000Mhz=0x312 1100Mhz=0x362 1120Mhz=0x372 1200Mhz=0x3B2
          for MOD in UFSD FAT EXFAT EXT2 EXT3 EXT4 XFS FUSE SWAP; do
              sed -i "s/CONFIG_FIRMWARE_ENABLE_${MOD}=y/CONFIG_FIRMWARE_ENABLE_${MOD}=n/" $m.config; done; \
          for MOD in UVC SERIAL AUDIO LPRD U2EC HDPARM PARTED SMBD FTPD ARIA ARIA_WEB_CONTROL DUMP1090 RTL_SDR HID XFRM QOS IMQ IFB IPSET NFSD NFSC CIFS NTFS_3G TCPDUMP SMBD36 WINS SMBD_SYSLOG RPL2TP EAP_PEAP HTTPS SFTP DROPBEAR DROPBEAR_FAST_CODE OPENSSH OPENVPN SSWAN OPENSSL_EC OPENSSL_EXE XUPNPD MINIDLNA FIREFLY FFMPEG_NEW TRANSMISSION TRANSMISSION_WEB_CONTROL CURL GDUT_DRCOM DOGCOM MINIEAP NJIT_CLIENT NAPT66 SOFTETHERVPN_SERVER SOFTETHERVPN_CLIENT SOFTETHERVPN_CMD VLMCSD TTYD LRZSZ HTOP NANO IPERF3 MTR SOCAT SRELAY MENTOHUST SCUTCLIENT FRPC FRPS TUNSAFE WIREGUARD SHADOWSOCKS XRAY V2RAY TROJAN SSOBFS ADBYBY KOOLPROXY SMARTDNS SMARTDNSBIN ADGUARDHOME CADDY CADDYBIN WYY WYYBIN ZEROTIER ALIDDNS DDNSTO ALDRIVER MENTOHUST SQM DNSFORWARDER CLOUDFLAREDDNS NVPPROXY DDNS_SSL SSSERVER NPC KUMASOCKS IPT2SOCKS MICROSOCKS; do
              sed -i "s/CONFIG_FIRMWARE_INCLUDE_${MOD}=y/CONFIG_FIRMWARE_INCLUDE_${MOD}=n/" $m.config; done; \
          fi; done
          cd $work_dir
          for m in $targets; do if [ -f $m.config ]; then echo "拷贝 $m.config"; cp -f ./$m.config $config_dir/$m.config; fi; done; \
          for m in $targets; do if [ -f public.sh ]; then echo "执行 public.sh"; sh ./public.sh; fi; if [ -f $m.sh ]; then echo "执行 $m.sh"; sh ./$m.sh; fi; done; \
      - name: Start build firmware
        run: |                         # 执行构建固件
          cd $work_dir
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx $images_dir/MeIsReallyBa_${m}_$(date +%Y%m%d).trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
      - name: Upload images to Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: MeIsReallyBa_4.4_${{ env.build_variant }}
          path: ${{ env.images_dir }}
      - name: Upload images to WeTransfer
        if: ${{ github.event.inputs.uploadwet == 'true' && success() }}
        run: |                         # 上传到 WeTransfer
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${images_dir} 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
